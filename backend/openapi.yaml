openapi: 3.0.0
info: 
  title: Harry's Hair Oils
  description: API for Harry's Hair Oils website
  version: 1.0.0
  contact:
    name: Harry 
    email:  mozeina2004@gmail.com
    
components:
  securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT 
      
      
paths: 
  /api/v1/products:
    get: 
      summary: View all shop products
      responses: 
        "200": 
          description: 'A list of all products'
          content: 
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties:
                    id: 
                      type: integer
                      description:  The ID of the product
                    item_name:
                      type: string
                      description: The name of the product
                    description:   
                      type: string
                      description: The product's description
                    price: 
                      type: string
                      description: The price of the product
                    stock:
                      type: integer
                      description: Available stock of the product
        '404': 
          description: 'No products found'
        
        '500': 
          description: "Server error"
          
  /api/v1/products/{id}:
    get: 
      summary: View specific product by id  
      parameters: 
        - in: path
          name: id 
          required: true
          schema: 
            type: integer
            description: The ID of the product to retrieve
      responses: 
        '200':
          description: 'Product at specified id'
          content:
            application/json: 
              schema: 
                type: array
                items: 
                  type: object
                  properties: 
                    id:
                      type: integer
                      description:  The ID of the product
                    item_name: 
                      type: string
                      description:  The name of the product
                    description: 
                      type: string
                      description: The description of the product
                    price: 
                      type: string
                      description: The price of the product
                    stock: 
                      type: integer
                      description: Available stock of the product
        
        '404': 
          description: Product with specified id not found
        '500':
          description: Server error 
    
  /api/v1/users/register:
    post:
      summary: Register a new account to access the API
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                username: 
                  type: string
                  minLength: 3
                  description: User's username (at least 6 characters long)
                email:
                  type: string
                  format: email 
                  description: User's email address
                password:
                  type: string
                  description: User's password (Must be atleast 6 characters long)
              required: 
                - username
                - email
                - password
      parameters: 
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            enum: 
              - application/json
      responses: 
        '201': 
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties: 
                  token: 
                    type: string
                    description: Access token for account (Expires in 1h from creation, have to login after)
        '400': 
          description: Bad request (Validation errors in request body)
          content:
            application/json: 
              schema: 
                type: object
                properties: 
                  errors:
                    type: array
                    items: 
                      type: object
                      properties: 
                        msg:
                          type: string
                          description: Message describing the error in the request body
                          
      
        '409':
          description: Conflict, user already exists, try logging in
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: Message describing the error (User already exists)
  
        '500':
          description: Server Error
          content: 
            application/json: 
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    description: Message describing the error (Server error)
                  
        
  /api/v1/users/login:
    post:
      summary: Log into an existing account to use the API
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties: 
                email: 
                  type: string
                  description: The email of your account
                  format: email
                password: 
                  type: string
                  description: The password to your account
                  minLength: 6
              required:
                - email
                - password
      parameters: 
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            enum: 
              - application/json
      responses:
        '200':
          description: Logged in successfully
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  token: 
                    type: string
                    description: Token to use in subsequent requests (That are related to ones account)
      
        
        '404':
          description: User doesn't exist
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                    type: string
                    description: User doesn't exist message
        
        '401':
          description: User is Unauthorized (Incorrect password)
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: string
                    description: Incorrect password message
        
        '500': 
          description: Server Error
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  error: 
                    type: string
                    description: Server error message 
  /api/v1/users/cart:
    get:
      summary: View user's cart
      security:
        - bearerAuth: [] 
      responses:
      
        "200":
          description: View users cart
          content:  
            application/json:
              schema:
                type: object
                properties:
                  cart_items:
                    type: array
                    items: 
                      type: object
                      properties:
                        item_name:
                          type: string
                          description: Name of item in cart
                        price:
                          type: string
                          description: Price of item in cart
                        quantity:
                          type: integer
                          description: Quantity of item in cart
                        total_item_price:
                          type: string
                          description: Total price of item in cart
                  cart_total:
                    type: string
                    description: Total price of items in cart
        "404":
          description: User's cart is empty
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  message:  
                    type: string
                    description: Message informing that user's cart is empty
         
        '401':
          description: Unauthorized (Absent or invalid access token)
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                    type: string
                    description: Unauthorized Message (Absent or invalid access token)
        '403':
          description: Unauthorized (Failed to authorize access token)
          content: 
            application/json: 
              schema: 
                type: object
                properties:
                  error:
                    type: string
                    description: Unauthorized Message (Failed to authorize access token)
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Internal server error message
                    
  /api/v1/users/cart/addToCart:
    post: 
      summary: Add item with desired quantity to cart
      security:
        - BearerAuth: []
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID of desired product
                quantity:
                  type: integer
                  description: Quantity of desired product
                  
      parameters: 
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
            enum: 
              - application/json            
      responses:
        
        '201':
          description: Item successfully added to cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message informing that item has been successfully added to user's cart
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    description: Error message with explanation
        '401': 
          description: Unauthorized
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: string
                    description: Unauthorized message, try logging in again / provide access token
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Internal server error message
  /api/v1/cart/removeFromCart/{id}:
    delete:
      summary: Remove item with specified ID from cart
      security:
        - BearerAuth: []
      parameters: 
        - in: path
          name: id 
          required: true
          schema: 
            type: integer
            description: The ID of the product to delete
      responses:
        '202':
          description: Remove item from cart successful
          content:
            application/json:
              schema:
                type: object
                properties: 
                  message:
                    type: string
                    description: Message indicating successful deletion
        '400': 
          description: Bad request (Absent or invalid item ID)
          content:
            application/json:
              schema:
                type: object
                properties: 
                  error:
                    type: string
                    description: Message indicating bad request (Absent or invalid item ID)
        '404':
          description: Item not found in cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error indicating item not found in cart
                    
        '500':
          description: Internal server error
          content:  
            application/json: 
              schema: 
                type: object
                properties:
                  error:
                    type: string
                    description: Invalid server error
  /api/v1/cart/updateQuantity:
    put:
      summary: Update the quantity of an item in user's cart
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer 
                  description: ID of item in cart to remove
                newQuantity: 
                  type: integer
                  description: Updated quantity of item
      responses: 
        '200':
          description: Quantity of specified item updated successfully
          content: 
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: message indicating quantity updated successfully
                    
        '400':
          description: Bad request / Quantity exceeds stock
          content: 
            application/json:
              schema: 
                type: object
                properties:
                  error:
                    type: string
                    description: Message indicating bad request or quantity exceeds available stock
        '404':
          description: Item doesn't exist in cart/store
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error: 
                    type: string
                    description: Message indicating item doesn't exist in cart/store
                    
        '500':
          description: Server error
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    description: Message indicating item doesn't exist in cart/store
                    
                    
  /api/v1/account/changePasword:
    put:
      summary: Update user's account password
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password: 
                  type: string
                  description: account's password
                newPassword:
                  type: string
                  description: newPassword for account
              required: 
                - password
                - newPassword
              
      responses: 
        "200":
          description: Password changed successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  message:  
                    type: string
                    description: Message indicating successful password change
        "500": 
          description: Internal server error
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Message indicating internal server error
          "400":
            description: Bad request (password/newPasword is undefined/empty value or newPassword length is less than 6 characters)
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Message indicating bad request (password/newPasword is undefined/empty value or newPassword length is less than 6 characters)
                      
          "409": 
            description: newPassword conflict
            content:
              applcation/json:
                schema:
                  type: object
                  properties:
                    error: 
                      type: string
                      description: Message indicating that newPassword cannot be the same as old password
            
    /api/v1/checkout:
      get:
        summary: checkout items in cart
        security:
          - BearerAuth: []
        responses:
          '200':
            description: Checkout successful
            content: 
              application/json:
                schema:
                  type: object
                  properties:
                    Checkout successful:
                      type: string
                      description: Message indicating successful checkout
                      
          '404':
            description: Cart is empty
            content:  
              application/json:
                schema:
                  type: object
                  properties:
                    error:  
                      type: string
                      description: Message indicating cart is empty
                      
          '500':
            description: Internal server error
            content:  
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Message indicating internal server error
                    
                      
                      
          
    
    
    